{"ast":null,"code":"import _objectSpread from\"C:/Users/Ghost/Desktop/homework/Redux_Store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";// import { useStoreContext } from \"../../utils/GlobalState\";\nimport{REMOVE_FROM_CART,UPDATE_CART_QUANTITY}from\"../../utils/actions\";import{idbPromise}from\"../../utils/helpers\";import{useDispatch}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CartItem=function CartItem(_ref){var item=_ref.item;var dispatch=useDispatch();var removeFromCart=function removeFromCart(item){dispatch({type:REMOVE_FROM_CART,_id:item._id});idbPromise(\"cart\",\"delete\",_objectSpread({},item));};var onChange=function onChange(e){var value=e.target.value;if(value===\"0\"){dispatch({type:REMOVE_FROM_CART,_id:item._id});idbPromise(\"cart\",\"delete\",_objectSpread({},item));}else{dispatch({type:UPDATE_CART_QUANTITY,_id:item._id,purchaseQuantity:parseInt(value)});idbPromise(\"cart\",\"put\",_objectSpread(_objectSpread({},item),{},{purchaseQuantity:parseInt(value)}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-row\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/\".concat(item.image),alt:\"\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[item.name,\", $\",item.price]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Qty:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"1\",value:item.purchaseQuantity,onChange:onChange}),/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"trash\",onClick:function onClick(){return removeFromCart(item);},children:\"\\uD83D\\uDDD1\\uFE0F\"})]})]})]});};export default CartItem;","map":{"version":3,"sources":["C:/Users/Ghost/Desktop/homework/Redux_Store/client/src/components/CartItem/index.js"],"names":["React","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","idbPromise","useDispatch","CartItem","item","dispatch","removeFromCart","type","_id","onChange","e","value","target","purchaseQuantity","parseInt","image","name","price"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,OAASC,gBAAT,CAA2BC,oBAA3B,KAAuD,qBAAvD,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,WAAT,KAA4B,aAA5B,C,wFACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC7B,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CAEA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,IAAD,CAAU,CAC/BC,QAAQ,CAAC,CACPE,IAAI,CAAER,gBADC,CAEPS,GAAG,CAAEJ,IAAI,CAACI,GAFH,CAAD,CAAR,CAIAP,UAAU,CAAC,MAAD,CAAS,QAAT,kBAAwBG,IAAxB,EAAV,CACD,CAND,CAQA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtB,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB,CACA,GAAIA,KAAK,GAAK,GAAd,CAAmB,CACjBN,QAAQ,CAAC,CACPE,IAAI,CAAER,gBADC,CAEPS,GAAG,CAAEJ,IAAI,CAACI,GAFH,CAAD,CAAR,CAIAP,UAAU,CAAC,MAAD,CAAS,QAAT,kBAAwBG,IAAxB,EAAV,CACD,CAND,IAMO,CACLC,QAAQ,CAAC,CACPE,IAAI,CAAEP,oBADC,CAEPQ,GAAG,CAAEJ,IAAI,CAACI,GAFH,CAGPK,gBAAgB,CAAEC,QAAQ,CAACH,KAAD,CAHnB,CAAD,CAAR,CAKAV,UAAU,CAAC,MAAD,CAAS,KAAT,gCAAqBG,IAArB,MAA2BS,gBAAgB,CAAEC,QAAQ,CAACH,KAAD,CAArD,GAAV,CACD,CACF,CAhBD,CAkBA,mBACE,aAAK,SAAS,CAAC,UAAf,wBACE,kCACE,YAAK,GAAG,mBAAaP,IAAI,CAACW,KAAlB,CAAR,CAAmC,GAAG,CAAC,EAAvC,EADF,EADF,cAIE,oCACE,uBACGX,IAAI,CAACY,IADR,OACiBZ,IAAI,CAACa,KADtB,GADF,cAIE,oCACE,8BADF,cAEE,cACE,IAAI,CAAC,QADP,CAEE,WAAW,CAAC,GAFd,CAGE,KAAK,CAAEb,IAAI,CAACS,gBAHd,CAIE,QAAQ,CAAEJ,QAJZ,EAFF,cAQE,aACE,IAAI,CAAC,KADP,CAEE,aAAW,OAFb,CAGE,OAAO,CAAE,yBAAMH,CAAAA,cAAc,CAACF,IAAD,CAApB,EAHX,gCARF,GAJF,GAJF,GADF,CA4BD,CAzDD,CA2DA,cAAeD,CAAAA,QAAf","sourcesContent":["import React from \"react\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useDispatch } from \"react-redux\";\nconst CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const removeFromCart = (item) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise(\"cart\", \"delete\", { ...item });\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === \"0\") {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id,\n      });\n      idbPromise(\"cart\", \"delete\", { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value),\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\n    }\n  };\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img src={`/images/${item.image}`} alt=\"\" />\n      </div>\n      <div>\n        <div>\n          {item.name}, ${item.price}\n        </div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            üóëÔ∏è\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}